plugins {
    id 'com.android.application'
}
def getCurrentBuildType() {
    Gradle gradle = getGradle()
    String tskReqStr = gradle.getStartParameter().getTaskRequests().toString()

    if (tskReqStr.contains("Release")) {
        //println "getCurrentBuildType release"
        return "release"
    } else if (tskReqStr.contains("eTythe")) {
        // println "getCurrentBuildType debug"
        return "etithe"
    }else{
        return "debug"
    }

    println "NO MATCH FOUND"
    return "";
}
android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    configurations.all {
        resolutionStrategy { force 'androidx.core:core-ktx:1.7.0-alpha01' }
    }
    defaultConfig {
        applicationId "com.prgs.etithe"
        minSdkVersion 19
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ndk {
            abiFilters 'x86', 'armeabi-v7a','arm64-v8a','x86_64'
        }
    }
    flavorDimensions "full", "demo"
    buildTypes {

        debug {
            debuggable true
            useProguard true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            shrinkResources true
            useProguard true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        demo {
            applicationId "com.prgs.etithe"
            versionCode 1
            dimension "demo"
            versionName "1.0.0"
        }
        full {
            applicationId "com.prgs.etithe"
            versionCode 1
            dimension "full"
            versionName "1.0.0"
        }
    }
    android.applicationVariants.all  { variant ->
        def bldType = getCurrentBuildType()
        variant.outputs.all { output ->
            def project = "eTithe"
            def SEP = "_"

            def version = variant.versionName
            def versioncode = variant.versionCode
            def date = new Date();
            def formattedDate = date.format('ddMMMyyyyHHMM')

            def newApkName = project + SEP + "V_" + version + "." + versioncode + SEP + bldType.toUpperCase() + SEP + formattedDate.toUpperCase() + ".apk"
            outputFileName = "./" + newApkName
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
//    def work_version = "2.6.0"
//    // Force WorkManager 2.6.0 for transitive dependency
//    implementation("androidx.work:work-runtime-ktx:$work_version") {
//        force = true
//    }

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.room:room-runtime:2.2.5'

    //implementation 'androidx.annotation:annotation:1.5.0'
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
    //------------------------------
    //Firebase
    //------------------------------
    implementation 'com.google.firebase:firebase-appindexing:17.1.0'
    implementation 'com.google.firebase:firebase-core:16.0.6'
    implementation 'com.google.firebase:firebase-database:16.0.5'
    implementation 'com.google.firebase:firebase-auth:16.1.0'
 //   implementation 'com.google.firebase:firebase-messaging:17.3.3'
    //implementation 'com.google.firebase:firebase-storage:19.2.1'
    implementation 'com.google.firebase:firebase-storage:16.0.5'


    //implementation 'com.google.firebase:firebase-messaging:20.2.3'
    implementation 'com.karumi:dexter:5.0.0'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'

    //Image Capture
    implementation 'com.github.jkwiecien:EasyImage:2.1.0'
    //Image Compress
    implementation 'id.zelory:compressor:2.1.0'
    implementation 'com.iceteck.silicompressorr:silicompressor:2.2.4'

    implementation 'com.karumi:dexter:6.2.2'
    // BUTTER KNIEF FOR BINDING CONTROLS
    implementation 'com.jakewharton:butterknife:10.2.3'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation('com.mikepenz:materialdrawer:6.1.2@aar') {
        transitive = true
    }
    //implementation "com.mikepenz:materialdrawer:6.1.2"
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'com.daimajia.slider:library:1.1.5@aar'

    implementation 'com.mikepenz:iconics-core:2.5.11@aar'
    implementation 'com.mikepenz:fontawesome-typeface:4.6.0.1@aar'
    implementation 'com.mikepenz:google-material-typeface:2.2.0.1.original@aar'

    implementation 'com.intuit.ssp:ssp-android:1.0.5'
    implementation 'com.applandeo:material-calendar-view:1.9.0-rc03' //Calander View
//    //Showing Pictures
    implementation 'com.github.bumptech.glide:glide:4.0.0'
    implementation 'com.github.bumptech.glide:compiler:4.0.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.0.0'
    implementation 'com.airbnb.android:lottie:2.7.0' // Drawe Menu Issue
    implementation 'com.jaredrummler:material-spinner:1.3.1'
    implementation 'com.github.florent37:expansionpanel:1.2.4'
    implementation 'com.google.android.gms:play-services-location:16.0.0'

    implementation 'com.github.viethoa:fastscroller:1.2.0' // Fast Scroll Third party
    implementation 'de.hdodenhof:circleimageview:3.1.0' // Circle Image
    implementation "com.github.skydoves:powermenu:2.1.9" //Powrb
    implementation "com.github.gcacace:signature-pad:1.2.1"
    annotationProcessor 'androidx.room:room-compiler:2.2.5'//Sign Capturing
    implementation 'com.github.alirezaafkar:Android-Image-Cropper:2.3.3' //Crop Images
    implementation 'com.github.LucasFsc:Html2Pdf:0.2-beta' // HTML to PDF
    implementation 'com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava'
    //Bottom Material Dialog
//    implementation 'dev.shreyaspatil.MaterialDialog:MaterialDialog:2.2.3'
//    implementation 'com.airbnb.android:lottie:3.3.6'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    //api project(path: ':apwlibrary')

}
apply plugin: 'com.google.gms.google-services'